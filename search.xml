<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Pycharm快捷键</title>
    <url>/blog/2020/08/24/Pycharm%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<ol>
<li>快速查看库源码  Ctrl+B</li>
<li>快速换行    Ctrl+enter</li>
<li>切分窗口    Shift+A</li>
<li>快速展开和合并函数    Ctrl+shift++和 Ctrl+shift+-</li>
<li>快速注释     Ctrl+/ </li>
<li>超级搜索     双击Shift</li>
<li>最近访问过的文件     Ctrl+E</li>
<li>历史粘贴板    Ctrl + Shift + V</li>
<li>替换   Ctrl+R</li>
<li>对已有的代码进行操作    Ctrl+Alt+T</li>
</ol>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>join与left join</title>
    <url>/blog/2020/08/24/join%E4%B8%8Eleft%20join/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dm_snyy.exception_waybillno <span class="keyword">as</span>   <span class="comment">#有了as就相当于建好表，不用写into语句</span></span><br><span class="line"><span class="keyword">select</span> waybillno <span class="keyword">from</span> ods_awsm.awsm_exception_monitor</span><br><span class="line"><span class="keyword">where</span> SYS_CODE=<span class="string">&#x27;BDP&#x27;</span> <span class="keyword">and</span> EXCEPTION_TYPE=<span class="number">15</span> <span class="keyword">and</span> create_time <span class="keyword">BETWEEN</span> <span class="string">&#x27;2019-01-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2019-01-10&#x27;</span> <span class="keyword">and</span> inc_day&gt;<span class="string">&#x27;20181231&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> dm_snyy.exception_waybillno  <span class="comment">#这个表里是2019-01-01到2019-01-10的所有异常运单数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> waybill_id,waybill_no,source_zone_code,dest_zone_code</span><br><span class="line"><span class="keyword">from</span> ods_shiva_oms.tt_operation_waybill </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">TABLE</span> dm_snyy.operation_waybill</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dm_snyy.operation_waybill <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">SELECT</span> waybill_no,source_zone_code,dest_zone_code</span><br><span class="line"><span class="keyword">from</span> ods_shiva_oms.tt_operation_waybill</span><br><span class="line"><span class="keyword">where</span> inc_day <span class="keyword">BETWEEN</span> <span class="string">&#x27;20190101&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;20190110&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> dm_snyy.operation_waybill</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> d.waybillno,o.source_zone_code,o.dest_zone_code</span><br><span class="line"><span class="keyword">from</span> dm_snyy.exception_waybillno d <span class="keyword">join</span> dm_snyy.operation_waybill o</span><br><span class="line"><span class="keyword">on</span> d.waybillno=o.waybill_no</span><br><span class="line"><span class="keyword">and</span> o.source_zone_code <span class="keyword">like</span> <span class="string">&#x27;010%&#x27;</span> <span class="keyword">and</span> o.dest_zone_code <span class="keyword">like</span> <span class="string">&#x27;028%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>注意最后的join和left join的差别<br>最后之所以用join是因为join相当于inner join ,join是只有两个表都有字段时才会显示，最后只会显示北京到成都的；<br>而left join不一样，他会根据左侧表有的字段来显示，在此例中异常表的运单号在右侧正常运单号里有的就会显示，不管是不是北京发往成都的。<br>最后要用and，不用where，这里要注意on和where的用法，where在on之后起筛选的作用，on只是关联条件，无筛选作用；而where有筛选的作用。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>gurobi安装和使用</title>
    <url>/blog/2020/08/24/gurobi%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p> 最近领了一个任务是用一下gurobi,因为我们组以前只用cplex，最近在考虑要不要买gurobi的权限，所以要我先试用一下。<br>   安装下载页确实费了一番功夫，因为公司网的原因，始终无法下载成功，最后还是找其他组的同事要了一个安装包才成功装上。装上之后需要有licence，因为在企业的网，不是校园网，所以网上申请的学术版Licence其实不能用。好在我联系了gurobi中国区的代理公司，他们很热情，给了我一个激活文件，放到了c:\gurobi目录下，成功进行了安装。<br>   关于使用心得后续会继续进行跟进。</p>
<p>过了快一年，现在来更新一下，这一年多来其实没怎么用gurobi，我又换了一家公司，主要做数据相关，不过gurobi的用起来还是非常不错，主要是官网上有很多配套的视频和文档，而且软件配套的也会有很多的例子，可以多看看，基本的语法和用法都可以熟悉，接下来的难度主要是如何把实际的项目用计算机的语言描述，这一点非常关键。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>python处理图片</title>
    <url>/blog/2020/08/24/python%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">file = (<span class="string">r&#x27;d:\user\01378237\桌面\river.jpg&#x27;</span>)</span><br><span class="line">img = Image.open(file,mode=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">box = (<span class="number">10</span>,<span class="number">10</span>,<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">region = img.crop(box)</span><br><span class="line">region.save(<span class="string">r&#x27;d:\user\01378237\桌面\cutting.jpg&#x27;</span>)</span><br><span class="line"><span class="comment">#img.show()</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">&#x27;img format: &#x27;</span>, img.format) <span class="comment"># 打印图像格式</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">&#x27;img size: &#x27;</span>, img.size) <span class="comment"># 打印图像尺寸</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">&#x27;img mode: &#x27;</span>, img.mode)</span><br><span class="line">img_gray = img.convert(<span class="string">&#x27;F&#x27;</span>) <span class="comment"># 转换为灰度模式</span></span><br><span class="line">img_gray.show() <span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>python编程总结</title>
    <url>/blog/2020/08/24/python%E7%BC%96%E7%A8%8B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>1，在python当中一切皆对象,每产生一个对象会对应三个属性:id、类型type和数值<br>2，创建一个类就会创建一个类的名称空间，用来存储类中定义的所有名字，这些名字称为类的属性：而类中有两种属性：数据属性和函数属性，其中类的数据属性是共享给所有对象的，而类的函数属性是绑定到所有对象的。  3，在类的内部来说,__init__是类的函数属性,但是对于对象来说,就是绑定方法。<br> 4，命名空间的问题:先从对象的命名空间找,随后在从类的命名空间找,随后在从父类的命名<br>空间找。<br>5，所谓初始化构造函数就是在构造对象的同时被对象自动调用,完成对事物的初始化,一个类只要生成一个类对象,它一定会调用初始化构造函数.<br>特点:<br>1&gt;一个类中只能有一个初始化构造函数<br>2&gt;不能有返回值<br>3&gt;可以用它来为每个实例定制自己的特征<br>6，方法重写指在子类中重新定义父类中已有的方法，这中现象叫做方法的重写<br>举例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name,age</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.tell()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&quot;%s---%s&quot;</span>%(self.name,self.age))</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">People</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&quot;呵呵!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    student = Student(<span class="string">&quot;alex&quot;</span>,<span class="number">20</span>)</span><br><span class="line">    <span class="comment">#查看Student所有的父类</span></span><br><span class="line">    print(Student.__bases__)</span><br><span class="line">    <span class="comment">#查看最近的父类</span></span><br><span class="line">    print(Student.__base__)</span><br><span class="line">    <span class="comment">#student既是Student类,又是People类</span></span><br><span class="line">    print(isinstance(student,Student))</span><br><span class="line">    print(isinstance(student,People))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>运行结果</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">呵呵!</span><br><span class="line">(&lt;class &#x27;__main__.People&#x27;&gt;,)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">People</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">True</span></span></span><br><span class="line"><span class="class"><span class="title">True</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">Process</span> <span class="title">finished</span> <span class="title">with</span> <span class="title">exit</span> <span class="title">code</span> 0</span></span><br></pre></td></tr></table></figure>
<p>在此例中，子类Student和父类People都定义了Tell方法，子类没有定义构造函数，此时调用的是父类的构造函数，但注意父类构造函数在调用tell()方法时，调用的是子类的tell()函数，因为两个函数重名，相当于重写了父类的函数，此时要调用子类重写后的函数。<br>7，super关键字产生的原因：在子类当中可以通过使用super关键字来调用父类的中相应的方法，简化代码。<br>使用super调用的所有属性，都是从MRO列表当前的位置往后找，千万不要通过看代码去找继承关系，一定要看MRO列表。<br>示例代码：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&quot;from foo&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span>(<span class="params">Foo</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment">#Foo.test(self)</span></span><br><span class="line">        super().test()</span><br><span class="line">        print(<span class="string">&quot;bar&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bb = Bar()</span><br><span class="line">    bb.test()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> foo</span><br><span class="line">bar</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>8，类变量的可变属性<br>假如类命名空间中的变量是可变的话，这时候会发生什么呢？<br>答案是，如果通过类的实例改变了变量，类变量也会发生改变，还是举个例子看看吧</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Service</span>(<span class="params">object</span>):</span></span><br><span class="line">    data = []</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, other_data</span>):</span></span><br><span class="line">        self.other_data = other_data</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在上面的代码中，在Service的命名空间中定义一个data，其初始值为空list，现在通过对象来改变它</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">s1</span> = <span class="type">Service</span>([&#x27;a&#x27;, &#x27;b&#x27;])</span><br><span class="line"><span class="title">s2</span> = <span class="type">Service</span>([&#x27;c&#x27;, &#x27;d&#x27;])</span><br><span class="line"><span class="title">s1</span>.<span class="class"><span class="keyword">data</span>.append(1)</span></span><br><span class="line"> </span><br><span class="line"><span class="title">s1</span>.<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="meta">## [1]</span></span><br><span class="line"><span class="title">s2</span>.<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="meta">## [1]</span></span><br><span class="line"> </span><br><span class="line"><span class="title">s2</span>.<span class="class"><span class="keyword">data</span>.append(2)</span></span><br><span class="line"> </span><br><span class="line"><span class="title">s1</span>.<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="meta">## [1, 2]</span></span><br><span class="line"><span class="title">s2</span>.<span class="class"><span class="keyword">data</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到，如果属性是可变的，在对象中改变这个属性，将会影响到类的命名空间。<br>可以通过赋值防止对象改变类变量。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">s1 = Service([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>])</span><br><span class="line">s2 = Service([<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])</span><br><span class="line"> </span><br><span class="line">s1.data = [<span class="number">1</span>]</span><br><span class="line">s2.data = [<span class="number">2</span>]</span><br><span class="line"> </span><br><span class="line">s1.data</span><br><span class="line"><span class="comment">## [1]</span></span><br><span class="line">s2.data</span><br><span class="line"><span class="comment">## [2]</span></span><br><span class="line">Service.data</span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure>
<p>在Service类里定义了一个类变量data，注意当我们执行s1.data.append(1)时，对这个类变量进行了修改，增加了一个1.而当我们执行s1.data = [1]时，我们并没有更改类变量data,而是给s1增加了一个变量data,原来的类变量不受影响,Service.data依旧是[1,2]。这一点要特别注意。append和赋值是两种完全不同的操作。实例无法修改类变量的指向，但可以修改类变量指向的内容，注意修改类变量的指向和修改类变量指向的内容是不同的概念。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>sql总结</title>
    <url>/blog/2020/08/24/sql%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>1，</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> a.cntype,a.cy,a.efftype,a.s,a.scity scityname,b.city scity,</span><br><span class="line">a.d,a.dcity dcityname,c.city dcity,a.deptm,a.arrtm,a.overdays,a.cap,a.cap cap2,a.tmcal_ori,</span><br><span class="line"><span class="keyword">dateadd</span>(<span class="keyword">MINUTE</span>,-(<span class="number">180</span>+<span class="number">40</span>),tmcal_ori) tmcal <span class="keyword">into</span> <span class="comment">#t2</span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">#t1 a</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="comment">#tttpm b on a.scity=b.cityname</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="comment">#tttpm c on a.dcity=c.cityname </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以left join 一个相同的表两次<br>dadeadd（minute,-220,tmcal_ori）这个函数的意思是在tmcal_ori这个字段加上-220分钟。<br>像这种连接是将几个表按行连接到一起，select后面是选取需要的列。<br>2，</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> index_yd_od_DW_2022gl_bp12 <span class="keyword">on</span> yd_od_DW_2022gl_bp1 (scity,dcity);</span><br><span class="line"> <span class="keyword">select</span> top <span class="number">1</span> @odrn=rn,@wt2=wt2,@s=s,@d=d</span><br><span class="line">    <span class="keyword">from</span> yd_od_DW_2022gl_bp1 <span class="keyword">where</span> wt2&gt;<span class="number">0</span> <span class="keyword">and</span> <span class="keyword">left</span>(scity,<span class="number">3</span>)=@scity <span class="keyword">and</span> <span class="keyword">left</span>(dcity,<span class="number">3</span>)=@dcity <span class="keyword">and</span> tm&lt;=@tmcal   <span class="comment">--tm小于最晚的截货时间 </span></span><br><span class="line">   <span class="keyword">order</span> <span class="keyword">by</span> tm,rn;</span><br></pre></td></tr></table></figure>
<p>像这种情况实际上索引没有用上，应为在等号左边有一个运算left(scity,3).<br>3，<br>A. 重命名表<br>下例将表 customers 重命名为 custs。 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXEC sp_rename &#x27;customers&#x27;, &#x27;custs&#x27; </span><br></pre></td></tr></table></figure>

<p>B. 重命名列<br>下例将表 customers 中的列 contact title 重命名为 title。 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXEC sp_rename &#x27;customers.[contact title]&#x27;, &#x27;title&#x27;, &#x27;COLUMN&#x27;</span><br></pre></td></tr></table></figure>
<p>4,选出首字母不为数字的行，用ascii()函数，字母的ascii码大于数字，9为57，大于57即为字母</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> BDP..zzc_air </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">ascii</span>( <span class="keyword">SUBSTRING</span>(Pc,<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">57</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--删除临时表#air</span></span><br><span class="line">if exists(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..#air&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">#air;</span></span><br><span class="line"><span class="comment">--删除实体表testsql</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>(<span class="keyword">Select</span> <span class="number">1</span> <span class="keyword">From</span> Sysobjects <span class="keyword">Where</span> <span class="keyword">Name</span>=<span class="string">&#x27;testsql&#x27;</span>) <span class="keyword">drop</span> <span class="keyword">table</span> testsql;</span><br><span class="line">if OBJECT_ID(&#x27;sn..testsql&#x27;,&#x27;U&#x27;) is not null <span class="keyword">drop</span> <span class="keyword">table</span> sn..testsql;</span><br></pre></td></tr></table></figure>
<p>5，sql server查询表zzc_air_gl的字段名，字段类型，和字段长度，查询其他的表则换个表名即可；</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sp_help zzc_air_gl</span><br></pre></td></tr></table></figure>
<p>6,</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---找到Sapt中含有空格的字段</span></span><br><span class="line"><span class="keyword">select</span> Sapt <span class="keyword">from</span> AREA_PROJECT..Aptzzc_cover_2025_guoji </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">charindex</span>(<span class="string">&#x27; &#x27;</span>,Sapt)&gt;<span class="number">0</span>;</span><br><span class="line">关于charindex函数参见 https://www.cnblogs.com/qianxingdewoniu/p/6858580.html</span><br><span class="line"><span class="comment">---这一步就是把空格去掉</span></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> Sapt=<span class="keyword">replace</span>(Sapt,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">from</span> AREA_PROJECT..Aptzzc_cover_2025_guoji a <span class="keyword">where</span> <span class="keyword">charindex</span>(<span class="string">&#x27; &#x27;</span>,Sapt)&gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>定价策略</title>
    <url>/blog/2020/08/24/%E5%AE%9A%E4%BB%B7%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这个文件中的代码实现的是定价策略，根据所投的流向和投的钱来比较哪种策略最好，当然这只是一个简易的版本，</span></span><br><span class="line"><span class="string">没有具体考虑到其它队的具体策略，但依然能够大概看出哪个流向最好。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">data = xlrd.open_workbook(<span class="string">r&#x27;d:\user\01378237\桌面\枢纽运营\公司资料\比赛\pricing_info.xlsx&#x27;</span>)</span><br><span class="line">Sheet = data.sheet_by_name(<span class="string">&#x27;pricing_info&#x27;</span>)</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">code=[]</span><br><span class="line">city = []</span><br><span class="line">price = []</span><br><span class="line">num = []</span><br><span class="line">amount = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        e = Sheet.cell_value(i,<span class="number">0</span>)</span><br><span class="line">        a = Sheet.cell_value(i,<span class="number">1</span>)</span><br><span class="line">        b = Sheet.cell_value(i,<span class="number">2</span>)</span><br><span class="line">        c = Sheet.cell_value(i,<span class="number">3</span>)</span><br><span class="line">        d = Sheet.cell_value(i,<span class="number">4</span>)</span><br><span class="line">        code.append(e)</span><br><span class="line">        city.append(a)</span><br><span class="line">        price.append(b)</span><br><span class="line">        num.append(c)</span><br><span class="line">        amount.append(d)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment">#print(price)</span></span><br><span class="line">fdict = &#123;&#125;     <span class="comment">#键是城市名，值是一个列表，分别是单价，用户总数，和最大额度限制</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(city)):</span><br><span class="line">    fdict.setdefault(city[i],[]).append(price[i])</span><br><span class="line">    fdict.setdefault(city[i],[]).append(num[i])</span><br><span class="line">    fdict.setdefault(city[i],[]).append(amount[i])</span><br><span class="line"><span class="comment">#print(pdict)</span></span><br><span class="line"></span><br><span class="line">codedict=dict(zip(city,code))  <span class="comment">#这个字典键是城市名，值是序号</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">price_fun</span>(<span class="params">m,n</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param m: 城市名称</span></span><br><span class="line"><span class="string">    :param n: 投入的资金数目</span></span><br><span class="line"><span class="string">    :return:   新价格</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    new_price = (fdict.get(m)[<span class="number">0</span>]*fdict.get(m)[<span class="number">1</span>]-n)/fdict.get(m)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> new_price</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numpeople</span>(<span class="params">m,n</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    用来计算一个流向如果全按最大值投的话可以获得的人数</span></span><br><span class="line"><span class="string">    :param m: 需要投的流向</span></span><br><span class="line"><span class="string">    :param n: 需要投的钱，一般n就是该流向所允许的最大值</span></span><br><span class="line"><span class="string">    :return:  该流向所获得的人数</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    new_price = (fdict.get(m)[<span class="number">0</span>] * fdict.get(m)[<span class="number">1</span>] - n) / fdict.get(m)[<span class="number">1</span>]</span><br><span class="line">    a=new_price**(<span class="number">-1.09</span>) + ((fdict.get(m)[<span class="number">0</span>])**(<span class="number">-1.09</span>))*<span class="number">52</span></span><br><span class="line">    b = (fdict.get(m)[<span class="number">1</span>]/a)*new_price**(<span class="number">-1.09</span>)</span><br><span class="line">    c = (fdict.get(m)[<span class="number">1</span>]/a)*(fdict.get(m)[<span class="number">0</span>])**(<span class="number">-1.09</span>)</span><br><span class="line">    d = b-c</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">respeople</span>(<span class="params">m,n</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    这个函数是必须的，它是在全投完之后剩余的那些钱投的流向，这时候的钱已经不够一个完整的流向了</span></span><br><span class="line"><span class="string">    :param m: 需要投的流向</span></span><br><span class="line"><span class="string">    :param n: 需要投的金额</span></span><br><span class="line"><span class="string">    :return: 该流向m可以获得的用户数</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    new_price = (fdict.get(m)[<span class="number">0</span>] * fdict.get(m)[<span class="number">1</span>] - n) / fdict.get(m)[<span class="number">1</span>]</span><br><span class="line">    a = new_price ** (<span class="number">-1.09</span>) + ((fdict.get(m)[<span class="number">0</span>]) ** (<span class="number">-1.09</span>)) * <span class="number">52</span></span><br><span class="line">    b = (fdict.get(m)[<span class="number">1</span>] / a) * new_price ** (<span class="number">-1.09</span>)</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_people</span>(<span class="params">m</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    #计算全投的那几个流向能够获得的用户数</span></span><br><span class="line"><span class="string">    :param m:   m是需要全投的那几个流向</span></span><br><span class="line"><span class="string">    :return:   全投的那些流向的用户总数</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    rnum=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">        realnum = numpeople(i,amount[int(codedict.get(i))])</span><br><span class="line">        rnum.append(realnum)</span><br><span class="line">    c=sum(rnum)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sur_people</span>(<span class="params">m</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    计算没有投的那些流向所获得的用户数</span></span><br><span class="line"><span class="string">    :param m: 没有投的那些流向</span></span><br><span class="line"><span class="string">    :return: 没有投的那些流向的用户总数</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    ynum=[]     <span class="comment">#这个列表里是没有投的那些流向获得的用户数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> city:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> m:</span><br><span class="line">            ynum.append(num[int(codedict.get(i))]/<span class="number">53</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    s=sum(ynum)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">minr=[]</span></span><br><span class="line"><span class="string">cl=[168]</span></span><br><span class="line"><span class="string">for i in city:</span></span><br><span class="line"><span class="string">    if i not in cl:</span></span><br><span class="line"><span class="string">        r=respeople(i,707167)   #r是剩余的钱能够获得的人数</span></span><br><span class="line"><span class="string">        minr.append(r)</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        pass</span></span><br><span class="line"><span class="string">print(minr.index(max(minr)))</span></span><br><span class="line"><span class="string">print(city[1])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    stra = [<span class="number">16</span>, <span class="number">35</span>, <span class="number">168</span>]</span><br><span class="line">    c=<span class="number">137</span></span><br><span class="line">    n=<span class="number">707167</span></span><br><span class="line">    print(all_people(stra)+sur_people(stra)+respeople(c,n))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>工作与生活</title>
    <url>/blog/2020/08/24/%E5%B7%A5%E4%BD%9C%E4%B8%8E%E7%94%9F%E6%B4%BB/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
  </entry>
  <entry>
    <title>机器学习笔记</title>
    <url>/blog/2020/08/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>1,对应缺失数据较少的情况可以用插值法来处理，插值的方法可以是随机森林<br>2，当使用逻辑回归建模时因为需要的特征都是数值型特征，所以会先选择将特征因子化，比如常见的one-hot编码,如下面的例子所示：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">dummies_Cabin = pd.get_dummies(data_train[<span class="string">&#x27;Cabin&#x27;</span>], prefix= <span class="string">&#x27;Cabin&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>2,为什么要降维？<br>主要是出于如下考虑：1. 特征维数越高，模型越容易过拟合，此时更复杂的模型就不好用。2. 相互独立的特征维数越高，在模型不变的情况下，在测试集上达到相同的效果表现所需要的训练样本的数目就越大。 3. 特征数量增加带来的训练、测试以及存储的开销都会增大。4.在某些模型中，例如基于距离计算的模型KMeans，KNN等模型，在进行距离计算时，维度过高会影响精度和性能。5.可视化分析的需要。在低维的情况下，例如二维，三维，我们可以把数据绘制出来，可视化地看到数据。当维度增高时，就难以绘制出来了。在机器学习中，有一个非常经典的维度灾难的概念。用来描述当空间维度增加时，分析和组织高维空间，因体积指数增加而遇到各种问题场景。例如，100个平均分布的点能把一个单位区间以每个点距离不超过0.01采样；而当维度增加到10后，如果以相邻点距离不超过0.01小方格采样单位超一单位超正方体，则需要10^20 个采样点。<br>所以特征不是越多越好，过多的特征可能会造成过拟合，增加计算开销<br>3，PCA算法<br>通过协方差矩阵的特征值分解能够得到数据的主成分，以二维特征为例，两个特征之间可能存在线性关系（例如运动的时速和秒速度），这样就造成了第二维信息是冗余的。PCA的目标是发现这种特征之间的线性关系，并去除。<br>4，将缺失值补为0的方法用fillna(0)完成<br>     round([],2)后边的2是保留后两位小数<br>5，</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x_train,x_test,y_train,y_test = train_test_split(train_da, label, test_size=<span class="number">0.15</span>, random_state=<span class="number">2019</span>)</span><br></pre></td></tr></table></figure>
<p>注意在用上面的来划分训练集合测试集的时候，train_da不是训练集，它是特征，label是标签，训练集里既有特征又有标签<br>x_train:训练集特征<br>x_test:测试集特征<br>y_train:训练集标签<br>y_test:测试集标签</p>
]]></content>
      <categories>
        <category>数据科学</category>
      </categories>
  </entry>
  <entry>
    <title>机器学习中的特征工程</title>
    <url>/blog/2020/08/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[<p>​在机器学习的模型训练中，特征工程是非常重要的环节，虽然很多机器学习的相关书籍都把重要的篇幅放在了算法上，但是在实际的应用中，特征工程是非常重要的环节，甚至可以说是决定模型结果的关键。关于特征工程有一下几个问题需要搞清楚：1，为什么要进行特征工程 2，进行特征工程的方法有哪些。<br>1，为什么要进行特征工程<br>以非常经典的房价预测为例，影响房价的因素有很多，原始的数据集大约有几十个特征，那么我们这些特征我们都需要吗，可能有些因素与最终的房价相关度并不高，也有可能有的特征直接有冗余，这时就需要我们去掉一些特征。也有可能需要我们去根据现有特征去创造新的特征，面对不同的问题会有不同的解决方案，不可一概而论。<br>特征工程可以说实在寻找一种好的数据表示，初学者可能会有疑问，如果不进项特征工程会怎样，加入把原始的特征全部放到模型中，那么可能有些特征与最终的标签无关，或者关联很小，这样会使训练出来的模型过拟合，也就是特征太多，模型太复杂，这样训练出来的模型往往在训练集上表现很好，但是在测试集中往往表现不佳。这和数据中有大量异常值类似</p>
]]></content>
      <categories>
        <category>数据科学</category>
      </categories>
  </entry>
  <entry>
    <title>线性函数为什么重要</title>
    <url>/blog/2020/08/24/%E7%BA%BF%E6%80%A7%E5%87%BD%E6%95%B0%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E8%A6%81/</url>
    <content><![CDATA[<h2 id="1，线性函数的定义："><a href="#1，线性函数的定义：" class="headerlink" title="1，线性函数的定义："></a>1，线性函数的定义：</h2><p>如果你去查关于线性函数的定义，那么教科书里会说类似于下面的函数可以被称为线性函数<br>$$<br>f(x_i)=a_1x_1+a_2x_2+…a_nx_n<br>$$<br>从数学的角度来说，这似乎不太严谨，直观来看，’线性’和加法与乘法有关，熟悉线性代数的读者应该还记得关于线性空间的定义，所谓的线性空间就与<strong>加性</strong>和<strong>乘性</strong>有关：</p>
<p><strong>线性空间可以定义为加法和标量乘法的集合V。V上的加法（addition）指的是一个函数，它把每一对 u,v</strong> 都对应到V的一个元素u+v。V上的标量乘法（scalar multiplication）也是一个函数，它把任意<br>$$<br>a\in F,v\in V<br>$$<br>对应到V的一个元素</p>
<p>这里F是一个域，V称为域F上的线性空间。</p>
<p>可见，按照如上的定义，系数 <img src="https://www.zhihu.com/equation?tex=a_%7B1%7D" alt="a_{1}">等可以看做F中的元素，而  等可以看做向量空间V中元素。</p>
<p>按照我们常识的经验，线性函数与所谓‘一次’，‘直线’这样的字眼有关系。比如我们初中就开始接触的一次函数y=kx+b，它与我们定义的线性函数相比只有一个变量，并且多了一个常熟项b，这里要特别强调的一点是，如果在我们定义的线性函数也加一个常数<br>$$<br>\omega<br>$$<br>那么此时的函数便不是线性的，事实上，函数变成<strong>仿射函数</strong>。</p>
<p>线性模型重要的原因是生活中很多现象都具有‘平滑性’（自然，不允许跳跃），比如人的身高与年龄的关系，年龄越大，身高越高；房价与面积的关系，面积越大，房价越高；汽车价格与排量的关系，排量越高，价格越贵等……</p>
<p>如果用图像表示则是如下这样的：</p>
<p><img src="https://pic1.zhimg.com/v2-32b1d1ac3420c5666e427cb3ea44a264_b.png" alt="img"></p>
<p>图中的横坐标可以表示年龄，面积，排量，纵坐标就是相应的身高，价格等。为了方便，我们举的是单变量的例子，多变量的道理是一样的，比如就房价来说，除了与面积相关，还可能与距地铁站的远近，房屋年龄等因素相关，道理都是一样的。</p>
]]></content>
      <categories>
        <category>数据科学</category>
      </categories>
  </entry>
  <entry>
    <title>sql存储过程</title>
    <url>/blog/2020/08/24/sql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p>sql server的存储过程类似于其他编程语言中的函数，可以将常用的逻辑固化下来，将表视为参数，存储过程可以大大提高工作效率。存储过程的启用可以用java或者python语言控制工作流；</p>
<p>有几个需要注意的点：</p>
<p>1，提前判断表是否已经存在，否则可能会报错.</p>
<p>2，字符串拼接时要注意特殊的语法.</p>
<p>3，可以在存储过程中加入异常捕获，try…catch…这样可以在报错时方便debug.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> [SN]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[sp_static_sh_use_time]    Script Date: 04/29/2019 15:17:53 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> PROC [dbo].[sp_static_sh_use_time](</span><br><span class="line">  @table_static_sh_input   <span class="built_in">varchar</span>(<span class="number">50</span>),    <span class="comment">--散航数据的最初输入表</span></span><br><span class="line">  @table_static_sh_output   <span class="built_in">varchar</span>(<span class="number">50</span>) )  <span class="comment">--输出表，是航线剔除的输入</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">drop table static_sh_input_0328;</span></span><br><span class="line"><span class="comment">create table static_sh_input_0328(</span></span><br><span class="line"><span class="comment">cy nvarchar(60),-- 运力名称</span></span><br><span class="line"><span class="comment">cntype nvarchar(60),-- 航班类型</span></span><br><span class="line"><span class="comment">dis nvarchar(60),-- 航班里程</span></span><br><span class="line"><span class="comment">stepflg nvarchar(60),-- 经停标志</span></span><br><span class="line"><span class="comment">craft nvarchar(60),-- 机型</span></span><br><span class="line"><span class="comment">cap nvarchar(60),-- 机型业载</span></span><br><span class="line"><span class="comment">scityname nvarchar(60),-- 始发城市</span></span><br><span class="line"><span class="comment">s nvarchar(60),-- 始发地机场三字码</span></span><br><span class="line"><span class="comment">dcityname nvarchar(60),-- 目的地城市 </span></span><br><span class="line"><span class="comment">d nvarchar(60),-- 目的地机场三字码</span></span><br><span class="line"><span class="comment">workday nvarchar(60),-- 班期</span></span><br><span class="line"><span class="comment">plan_deptm nvarchar(60),-- 计划发出时间</span></span><br><span class="line"><span class="comment">plan_arrtm nvarchar(60),-- 计划到达时间</span></span><br><span class="line"><span class="comment">validdt nvarchar(60),-- 航班生效日期</span></span><br><span class="line"><span class="comment">offdt nvarchar(60),-- 航班失效日期</span></span><br><span class="line"><span class="comment">efftype nvarchar(60),-- 时效性航班类型</span></span><br><span class="line"><span class="comment">ssc nvarchar(60),-- 发货归属网点</span></span><br><span class="line"><span class="comment">dsc nvarchar(60),-- 提货归属网点</span></span><br><span class="line"><span class="comment">overdays nvarchar(60),-- 飞行跨越天数</span></span><br><span class="line"><span class="comment">ccmin nvarchar(60),-- 货站截载时长</span></span><br><span class="line"><span class="comment">lastctm nvarchar(60),-- 货站最晚截载时间</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">load static_sh_input_0328.txt into static_sh_input_0328</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- ============================================================================</span></span><br><span class="line"><span class="keyword">BEGIN</span> TRY</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">sql</span> <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line">if exists(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##t1&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##t1;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">sql</span> = <span class="string">&#x27;select distinct cntype,cy,efftype,scityname scity,s,dcityname dcity,d,plan_deptm deptm,plan_arrtm arrtm,overdays,</span></span><br><span class="line"><span class="string">cast(cap as numeric(10,5)) cap,left(plan_deptm,2)+&#x27;&#x27;:&#x27;&#x27;+right(plan_deptm,2) tmcal_ori</span></span><br><span class="line"><span class="string">into ##t1 from &#x27;</span> + @table_static_sh_input + <span class="string">&#x27; where overdays&lt;=1 and cap&lt;&gt;&#x27;&#x27;&#x27;&#x27; and stepflg&lt;&gt;N&#x27;</span>+ <span class="string">&#x27;&#x27;&#x27;&#x27;</span>+N<span class="string">&#x27;经停&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">exec sp_executesql @sql;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> cap=cap/<span class="number">1000.0</span> <span class="keyword">from</span> <span class="comment">##t1 a;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##tttpm&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##tttpm;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cityname,citycode city <span class="keyword">into</span> <span class="comment">##tttpm from publicdb.dbo.city_info;</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="comment">##tttpm select N&#x27;晋江&#x27;,&#x27;595&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;义乌&#x27;</span>,<span class="string">&#x27;579&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;大理&#x27;</span>,<span class="string">&#x27;872&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;迪庆&#x27;</span>,<span class="string">&#x27;887&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;芒市&#x27;</span>,<span class="string">&#x27;692&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;西昌&#x27;</span>,<span class="string">&#x27;834&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;台湾&#x27;</span>,<span class="string">&#x27;886&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;延吉&#x27;</span>,<span class="string">&#x27;433&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;恩施&#x27;</span>,<span class="string">&#x27;718&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;兴义&#x27;</span>,<span class="string">&#x27;859&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;万州&#x27;</span>,<span class="string">&#x27;023&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;稻城&#x27;</span>,<span class="string">&#x27;836&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;梅县&#x27;</span>,<span class="string">&#x27;753&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;林芝&#x27;</span>,<span class="string">&#x27;894&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;和田&#x27;</span>,<span class="string">&#x27;903&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;富蕴&#x27;</span>,<span class="string">&#x27;906&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;塔城&#x27;</span>,<span class="string">&#x27;901&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;甘孜州&#x27;</span>,<span class="string">&#x27;836&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;抚远&#x27;</span>,<span class="string">&#x27;454&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;昌都地区&#x27;</span>,<span class="string">&#x27;895&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;库车&#x27;</span>,<span class="string">&#x27;997&#x27;</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;九寨沟&#x27;</span>,<span class="string">&#x27;837&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;日喀则&#x27;</span>,<span class="string">&#x27;892&#x27;</span> </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;巴音郭楞蒙古自治州/铁门关&#x27;</span>  ,<span class="string">&#x27;996&#x27;</span>    </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;格尔木&#x27;</span>                     ,<span class="string">&#x27;979&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;武夷山&#x27;</span>                     ,<span class="string">&#x27;599&#x27;</span> </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;阿克苏&#x27;</span>                     ,<span class="string">&#x27;997&#x27;</span>    </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> N<span class="string">&#x27;西双版纳&#x27;</span>                   ,<span class="string">&#x27;691&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- select cityname from #tttpm group by cityname having COUNT(1)&gt;1</span></span><br><span class="line"><span class="keyword">delete</span> a <span class="keyword">from</span> <span class="comment">##tttpm a where city=&#x27;OSR&#x27;; -- 香港 852</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">--最晚的截货时间在起飞前三小时四十分钟</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##t2&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##t2;</span></span><br><span class="line"><span class="keyword">select</span> a.cntype,a.cy,a.efftype,a.s,a.scity scityname,b.city scity,</span><br><span class="line">a.d,a.dcity dcityname,c.city dcity,a.deptm,a.arrtm,a.overdays,a.cap,a.cap cap2,a.tmcal_ori,</span><br><span class="line"><span class="keyword">dateadd</span>(<span class="keyword">MINUTE</span>,-(<span class="number">180</span>+<span class="number">40</span>),tmcal_ori) tmcal <span class="keyword">into</span> <span class="comment">##t2</span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">##t1 a</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="comment">##tttpm b on a.scity=b.cityname</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="comment">##tttpm c on a.dcity=c.cityname </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- #t2 where scity is null or dcity is null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##t3&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##t3;</span></span><br><span class="line"><span class="keyword">select</span> cntype,cy,efftype,s,scityname,scity,d,dcityname,dcity,deptm,arrtm,<span class="keyword">cast</span>(arrtm <span class="keyword">as</span> <span class="built_in">int</span>)-<span class="keyword">cast</span>(deptm <span class="keyword">as</span> <span class="built_in">int</span>) ftm,overdays,</span><br><span class="line">       cap,cap2,<span class="keyword">left</span>(<span class="keyword">cast</span>(<span class="keyword">cast</span>(tmcal <span class="keyword">as</span> <span class="built_in">time</span>) <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">10</span>)),<span class="number">5</span>) tmcal,N<span class="string">&#x27;用于判断散航类型的判断字段&#x27;</span> shtype</span><br><span class="line"> <span class="keyword">into</span> <span class="comment">##t3 from ##t2 ;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">update</span> <span class="comment">##t3 set tmcal=replace(tmcal,&#x27;:&#x27;,&#x27;&#x27;),shtype=&#x27;&#x27;,ftm=case when ftm&lt;0 then 2400+ftm else ftm end;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 飞行时长过短判断为错误数据</span></span><br><span class="line"><span class="keyword">delete</span> a <span class="keyword">from</span> <span class="comment">##t3 a where ftm&lt;30;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> shtype=N<span class="string">&#x27;有时效次晨发次晨到晚早散航&#x27;</span>,</span><br><span class="line">tmcal=<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">CAST</span>(tmcal <span class="keyword">as</span> <span class="built_in">Int</span>)&lt;<span class="number">2020</span> <span class="keyword">then</span> <span class="keyword">cast</span>((<span class="keyword">CAST</span>(tmcal <span class="keyword">as</span> <span class="built_in">Int</span>)+<span class="number">2400</span>) <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">4</span>)) <span class="keyword">else</span> tmcal <span class="keyword">end</span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">##t3 a </span></span><br><span class="line"><span class="keyword">where</span> deptm&gt;<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> deptm&lt;arrtm <span class="keyword">and</span> arrtm&lt;=<span class="string">&#x27;1000&#x27;</span> <span class="keyword">and</span> overdays=<span class="number">0</span> <span class="keyword">and</span> shtype=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> shtype=N<span class="string">&#x27;有时效当天发晚散航&#x27;</span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">##t3 a </span></span><br><span class="line"><span class="keyword">where</span> shtype=<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> efftype=N<span class="string">&#x27;晚航班&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> shtype=N<span class="string">&#x27;有时效当日发次晨到早散航&#x27;</span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">##t3 a </span></span><br><span class="line"><span class="keyword">where</span> shtype=<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> efftype=N<span class="string">&#x27;早航班&#x27;</span> <span class="keyword">and</span> arrtm&lt;<span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ##t3 where cy=&#x27;G52662D&#x27;  考虑这个是当日发还是次日发？</span></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> shtype=N<span class="string">&#x27;无时效次日发早散航&#x27;</span>,tmcal=<span class="keyword">cast</span>((<span class="keyword">CAST</span>(tmcal <span class="keyword">as</span> <span class="built_in">Int</span>)+<span class="number">2400</span>) <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">4</span>))</span><br><span class="line"><span class="keyword">from</span> <span class="comment">##t3 a </span></span><br><span class="line"><span class="keyword">where</span> shtype=<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> efftype=N<span class="string">&#x27;早航班&#x27;</span> <span class="comment">-- and CAST(tmcal as Int)&lt;2020</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ##t3 where shtype=N&#x27;有时效次晨发晚早散航&#x27; order by tmcal</span></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> shtype=N<span class="string">&#x27;无时效次日发午散航&#x27;</span>,</span><br><span class="line">tmcal=<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">CAST</span>(tmcal <span class="keyword">as</span> <span class="built_in">Int</span>)&lt;<span class="number">2020</span> <span class="keyword">then</span> <span class="keyword">cast</span>((<span class="keyword">CAST</span>(tmcal <span class="keyword">as</span> <span class="built_in">Int</span>)+<span class="number">2400</span>) <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">4</span>)) <span class="keyword">else</span> tmcal <span class="keyword">end</span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">##t3 a </span></span><br><span class="line"><span class="keyword">where</span> shtype=<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> efftype=N<span class="string">&#x27;午航班&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql2 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql2 = <span class="string">&#x27;if OBJECT_ID(&#x27;&#x27;&#x27;</span>+@table_static_sh_output+<span class="string">&#x27;&#x27;&#x27;) is not null drop table &#x27;</span>+ @table_static_sh_output;</span><br><span class="line">exec sp_executesql @sql2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql3 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql3=<span class="string">&#x27;select * into &#x27;</span> +@table_static_sh_output +<span class="string">&#x27; from ##t3;&#x27;</span></span><br><span class="line">exec sp_executesql @sql3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##t1;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##tttpm;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##t2;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##t3;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> TRY</span><br><span class="line"><span class="keyword">BEGIN</span> CATCH <span class="comment">-- 捕获异常</span></span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> base..tt_proc_log(ErrorProducure, ErrorNumber, ErrorSeverity, ErrorState, ErrorLine, ErrorMessage) </span><br><span class="line">        <span class="keyword">select</span> ERROR_PROCEDURE(), ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(), ERROR_LINE() , <span class="built_in">text</span> <span class="keyword">as</span> ErrorMessage</span><br><span class="line">         <span class="keyword">from</span> sys.messages <span class="keyword">WHERE</span> message_id=ERROR_NUMBER() <span class="keyword">AND</span> language_id=<span class="number">2052</span></span><br><span class="line"><span class="keyword">END</span> CATCH</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> [SN]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[sp_static_od_use_time]    Script Date: 04/29/2019 15:18:34 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> [dbo].[sp_static_od_use_time](</span><br><span class="line">       @static_od_zzc_time   <span class="built_in">varchar</span>(<span class="number">50</span>),     <span class="comment">--od分时集货表</span></span><br><span class="line">       @static_Apt_zzc_cover  <span class="built_in">varchar</span>(<span class="number">50</span>),    <span class="comment">--中转场机场对应关系表</span></span><br><span class="line">       @static_Apt_od_cal    <span class="built_in">varchar</span>(<span class="number">50</span>))     <span class="comment">--输出表,od分时集货，散航规划的输入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRY</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">sql</span> <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line">if exists(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##city_odwt&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##city_odwt;</span></span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">sql</span>=<span class="string">&#x27;select source_zzc scity,dest_zzc dcity, zzc_tm tm,wt_weight wt1, cum_wt_weight wt,wtall_weight totalweight </span></span><br><span class="line"><span class="string">into ##city_odwt from &#x27;</span> +@static_od_zzc_time; <span class="comment">--中转场分时集货机场到达时间</span></span><br><span class="line"></span><br><span class="line">exec sp_executesql @sql;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql1 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line">if exists(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##ci_air&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##ci_air;</span></span><br><span class="line"><span class="keyword">set</span> @sql1=<span class="string">&#x27;select distinct a.*,b.Sapt s,c.Sapt d into ##ci_air from ##city_odwt a</span></span><br><span class="line"><span class="string">	left join &#x27;</span>+@static_Apt_zzc_cover +<span class="string">&#x27; b  </span></span><br><span class="line"><span class="string">		on a.scity=b.Szzc</span></span><br><span class="line"><span class="string">	left join &#x27;</span>+@static_Apt_zzc_cover +<span class="string">&#x27; c</span></span><br><span class="line"><span class="string">		on a.dcity=c.Szzc&#x27;</span></span><br><span class="line">		</span><br><span class="line">exec sp_executesql @sql1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="comment">##ci_air where s is null or d is null;</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="comment">##ci_air where s=d;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##yd_Apt_od_cal_DW&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##yd_Apt_od_cal_DW;</span></span><br><span class="line"><span class="keyword">select</span> ROW_NUMBER()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> <span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> s,d,scity,dcity,tm) rn,</span><br><span class="line">		s,d,scity,dcity,tm,wt1 wt, wt1 wt2 </span><br><span class="line"><span class="keyword">into</span> <span class="comment">##yd_Apt_od_cal_DW </span></span><br><span class="line"><span class="keyword">from</span> <span class="comment">##ci_air;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> wt=wt/<span class="number">1000.0</span> <span class="keyword">from</span> <span class="comment">##yd_Apt_od_cal_DW a;   --重量由千克改成吨</span></span><br><span class="line"><span class="keyword">update</span> b <span class="keyword">set</span> wt2=wt2/<span class="number">1000.0</span> <span class="keyword">from</span> <span class="comment">##yd_Apt_od_cal_DW b;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql2 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql2 = <span class="string">&#x27;if OBJECT_ID(&#x27;&#x27;&#x27;</span>+@static_Apt_od_cal+<span class="string">&#x27;&#x27;&#x27;) is not null drop table &#x27;</span>+ @static_Apt_od_cal;</span><br><span class="line">exec sp_executesql @sql2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql3 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql3=<span class="string">&#x27;select * into &#x27;</span> +@static_Apt_od_cal +<span class="string">&#x27; from ##yd_Apt_od_cal_DW;&#x27;</span></span><br><span class="line">exec sp_executesql @sql3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##ci_air;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##city_odwt;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##yd_Apt_od_cal_DW;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> TRY</span><br><span class="line">     <span class="keyword">BEGIN</span> CATCH <span class="comment">-- 捕获异常</span></span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> base..tt_proc_log(ErrorProducure, ErrorNumber, ErrorSeverity, ErrorState, ErrorLine, ErrorMessage) </span><br><span class="line">        <span class="keyword">select</span> ERROR_PROCEDURE(), ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(), ERROR_LINE() , <span class="built_in">text</span> <span class="keyword">as</span> ErrorMessage</span><br><span class="line">         <span class="keyword">from</span> sys.messages <span class="keyword">WHERE</span> message_id=ERROR_NUMBER() <span class="keyword">AND</span> language_id=<span class="number">2052</span></span><br><span class="line">     <span class="keyword">END</span> CATCH</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> [SN]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[sp_civil_aviation_planning]    Script Date: 04/29/2019 15:19:23 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> PROC [dbo].[sp_civil_aviation_planning](</span><br><span class="line">       @static_sh_use   <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">       @static_od_volume  <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">       @p_sh_DW_time      <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">       @p_yd_deal_DW_time  <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">       @yd_od_DW_time      <span class="built_in">varchar</span>(<span class="number">50</span>)  )</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRY</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">sql</span> <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"></span><br><span class="line">if exists(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##p_sh_DW&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##p_sh_DW;</span></span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">sql</span>=<span class="string">&#x27;select row_number()over(partition by 1 order by efftype desc,tmcal) rn,</span></span><br><span class="line"><span class="string">       cy,efftype,s,scityname,scity,d,dcityname,dcity,deptm,arrtm,cap,cap2,tmcal,shtype,</span></span><br><span class="line"><span class="string">       case when shtype=N&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>+N<span class="string">&#x27;有时效当天发晚散航&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>+<span class="string">&#x27; and deptm&gt;=arrtm then &#x27;&#x27;2&#x27;&#x27; +arrtm </span></span><br><span class="line"><span class="string">            when shtype like N&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>+N<span class="string">&#x27;%次晨到%&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>+<span class="string">&#x27; then &#x27;&#x27;2&#x27;&#x27;+arrtm</span></span><br><span class="line"><span class="string">            else &#x27;&#x27;1&#x27;&#x27; +arrtm end arrtm_cal,cast(0 as int) initflg</span></span><br><span class="line"><span class="string">into ##p_sh_DW from &#x27;</span> +  @static_sh_use + <span class="string">&#x27; where shtype like N&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>+N<span class="string">&#x27;%有时效%&#x27;</span>+<span class="string">&#x27;&#x27;&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">exec sp_executesql @sql;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> index_<span class="comment">##p_sh_DW on ##p_sh_DW (rn);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql1 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"></span><br><span class="line">if exists(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##yd_od_DW&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##yd_od_DW;</span></span><br><span class="line"><span class="keyword">set</span> @sql1=<span class="string">&#x27;select row_number()over(partition by 1 order by prd,s,d,scity,dcity,tm) rn,</span></span><br><span class="line"><span class="string">       case when s&lt;=d then s else d end + &#x27;&#x27;-&#x27;&#x27; + case when s&lt;=d then d else s end line,</span></span><br><span class="line"><span class="string">       0 p2pflg,s,d,cast(scity as varchar(5)) scity,cast(dcity as varchar(5)) dcity,prd,tm,wt,wt as wt2 ,left(scity,3) as nscity,left(dcity,3) as ndcity </span></span><br><span class="line"><span class="string">       into ##yd_od_DW</span></span><br><span class="line"><span class="string">       from (</span></span><br><span class="line"><span class="string">       select s,d,scity,dcity,&#x27;&#x27;1Dom&#x27;&#x27; prd,tm,wt,left(scity,3) as nscity,left(dcity,3) as ndcity from &#x27;</span> +@static_od_volume+ <span class="string">&#x27;) xx &#x27;</span>; </span><br><span class="line"><span class="comment">-- where s not in (&#x27;TPE&#x27;,&#x27;HKG&#x27;) and d not in (&#x27;TPE&#x27;,&#x27;HKG&#x27;);</span></span><br><span class="line"></span><br><span class="line">exec sp_executesql @sql1;</span><br><span class="line"></span><br><span class="line"><span class="comment">--给这些字段增加索引，是为了加快查询的速度。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> index_<span class="comment">##yd_od_DW1 on ##yd_od_DW (rn);</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> index_<span class="comment">##yd_od_DW2 on ##yd_od_DW (scity,dcity);--因为这两个字段经常会在where字句中联合使用，所以建立联合索引。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> index_<span class="comment">##yd_od_DW3 on ##yd_od_DW (s,d);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- DEAL:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> tempdb..sysobjects <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">&#x27;tempdb..##p_yd_deal_DW&#x27;</span>)) <span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##p_yd_deal_DW;</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="comment">##p_yd_deal_DW(</span></span><br><span class="line">odrn <span class="built_in">int</span>,s <span class="built_in">varchar</span>(<span class="number">10</span>),d <span class="built_in">varchar</span>(<span class="number">10</span>),scity <span class="built_in">varchar</span>(<span class="number">10</span>),dcity <span class="built_in">varchar</span>(<span class="number">10</span>),prd <span class="built_in">varchar</span>(<span class="number">10</span>),tm <span class="built_in">varchar</span>(<span class="number">10</span>),wtall <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>),</span><br><span class="line">wt <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>),cyrn <span class="built_in">int</span>,dealflg <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--set xact_abort on;</span></span><br><span class="line"><span class="comment">--begin tran;</span></span><br><span class="line"><span class="keyword">declare</span> @shrn <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),@s <span class="built_in">varchar</span>(<span class="number">10</span>),@scity <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">@d <span class="built_in">varchar</span>(<span class="number">10</span>),@dcity <span class="built_in">varchar</span>(<span class="number">10</span>),@tmcal <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">@cap2 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>), @odrn <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),@wt2 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>), @tempResult <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>),</span><br><span class="line">@deal <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>),@doneflg <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">set</span> @doneflg=<span class="number">0</span>;  <span class="keyword">set</span> @shrn=<span class="number">0</span>;  <span class="keyword">set</span> @odrn=<span class="number">0</span>;</span><br><span class="line">while @doneflg=0</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> top <span class="number">1</span> @shrn=rn,@cap2=cap2,@scity=scity,@dcity=dcity,@tmcal=tmcal</span><br><span class="line">    <span class="keyword">from</span> <span class="comment">##p_sh_DW where cap2&gt;0 and initflg=0 order by arrtm_cal,rn;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">set</span> @tempResult = @cap2;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">DECLARE</span> cursor_test <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">	<span class="keyword">SELECT</span> rn, wt2, s, d <span class="keyword">FROM</span> <span class="comment">##yd_od_DW</span></span><br><span class="line">	<span class="keyword">where</span> wt2&gt;<span class="number">0</span> <span class="keyword">and</span> prd <span class="keyword">like</span> <span class="string">&#x27;1%&#x27;</span> <span class="keyword">and</span> nscity = @scity <span class="keyword">and</span> ndcity = @dcity <span class="keyword">and</span> tm&lt;= @tmcal <span class="comment">--时刻注意取出来的货量是和散航匹配的</span></span><br><span class="line">	<span class="keyword">order</span> <span class="keyword">by</span> tm,rn;</span><br><span class="line">	OPEN cursor_test</span><br><span class="line">	FETCH NEXT FROM cursor_test INTO @odrn, @wt2, @s, @d</span><br><span class="line">	if(@shrn&gt;0 and @odrn&gt;0) begin</span><br><span class="line">		WHILE @@FETCH_STATUS=0</span><br><span class="line">		 <span class="keyword">BEGIN</span> </span><br><span class="line">		    <span class="keyword">set</span> @deal=<span class="keyword">case</span> <span class="keyword">when</span> @wt2&lt;=@tempResult <span class="keyword">then</span> @wt2 <span class="keyword">else</span> @tempResult <span class="keyword">end</span>;   <span class="comment">--@deal是@wt2和@tempResult中较小的一个</span></span><br><span class="line">		    if( @tempResult&gt;0 and @deal &gt;0) </span><br><span class="line">		     <span class="keyword">begin</span></span><br><span class="line">			  <span class="keyword">insert</span> <span class="keyword">into</span> <span class="comment">##p_yd_deal_DW(odrn,cyrn,wt,dealflg) select @odrn,@shrn,@deal,2;</span></span><br><span class="line">			  <span class="keyword">update</span> <span class="comment">##yd_od_DW set wt2=wt2-@deal where rn=@odrn;</span></span><br><span class="line">			  <span class="keyword">set</span> @tempResult = @tempResult - @deal;</span><br><span class="line">			 <span class="keyword">end</span></span><br><span class="line">			<span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> cursor_test <span class="keyword">INTO</span> @odrn, @wt2, @s, @d</span><br><span class="line">		 <span class="keyword">END</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">CLOSE</span> cursor_test</span><br><span class="line">	<span class="keyword">DEALLOCATE</span> cursor_test;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">--print @cap2</span></span><br><span class="line">	<span class="comment">--print &#x27;@tempResult&#x27;</span></span><br><span class="line">	<span class="comment">--print @tempResult</span></span><br><span class="line">	</span><br><span class="line">    if(@shrn &gt; 0) begin</span><br><span class="line">     <span class="keyword">update</span> <span class="comment">##p_sh_DW set initflg=1, cap2 = @tempResult where rn=@shrn;  --当散航资源还有,货已经运完了,就把设initflg=1，如果散航资源没了，就设为0</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>(@shrn=<span class="number">0</span>) <span class="keyword">begin</span> <span class="keyword">set</span> @doneflg=<span class="number">1</span>; <span class="keyword">end</span>     </span><br><span class="line">  </span><br><span class="line">   <span class="keyword">set</span> @shrn=<span class="number">0</span>;<span class="keyword">set</span> @odrn=<span class="number">0</span>; <span class="comment">--最后要对@shrn和@odrn重新进行一次初始化</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="comment">--commit tran;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> a.s=b.s,a.d=b.d,a.scity=b.scity,a.dcity=b.dcity,a.prd=b.prd,a.tm=b.tm,a.wtall=b.wt</span><br><span class="line"><span class="keyword">from</span> <span class="comment">##p_yd_deal_DW a join ##yd_od_DW b on a.odrn=b.rn and a.s is null;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--接下来再按站点的维度剔</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> <span class="comment">##p_sh_DW set initflg=0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--set xact_abort on;</span></span><br><span class="line"><span class="comment">--begin tran;</span></span><br><span class="line"><span class="keyword">declare</span> @shrn1 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),@s1 <span class="built_in">varchar</span>(<span class="number">10</span>),@scity1 <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">@d1 <span class="built_in">varchar</span>(<span class="number">10</span>),@dcity1 <span class="built_in">varchar</span>(<span class="number">10</span>),@tmcal1 <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">@cap21 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>), @odrn1 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),@wt21 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>), @tempResult1 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>),</span><br><span class="line">@deal1 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">5</span>),@doneflg1 <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">set</span> @doneflg1=<span class="number">0</span>;  <span class="keyword">set</span> @shrn1=<span class="number">0</span>;  <span class="keyword">set</span> @odrn1=<span class="number">0</span>;</span><br><span class="line">while @doneflg1=0</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> top <span class="number">1</span> @shrn1=rn,@cap21=cap2,@s1=s,@d1=d,@tmcal1=tmcal</span><br><span class="line">    <span class="keyword">from</span> <span class="comment">##p_sh_DW where cap2&gt;0 and initflg=0 order by arrtm_cal,rn;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">set</span> @tempResult1 = @cap21;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">DECLARE</span> cursor_test <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">	<span class="keyword">SELECT</span> rn, wt2 <span class="keyword">FROM</span> <span class="comment">##yd_od_DW</span></span><br><span class="line">	<span class="keyword">where</span> wt2&gt;<span class="number">0</span> <span class="keyword">and</span> prd <span class="keyword">like</span> <span class="string">&#x27;1%&#x27;</span> <span class="keyword">and</span> s=@s1 <span class="keyword">and</span> d=@d1 <span class="keyword">and</span> tm&lt;= @tmcal1 </span><br><span class="line">	<span class="keyword">order</span> <span class="keyword">by</span> tm,rn;</span><br><span class="line">	OPEN cursor_test</span><br><span class="line">	FETCH NEXT FROM cursor_test INTO @odrn1, @wt21</span><br><span class="line">	if(@shrn1&gt;0 and @odrn1&gt;0) begin</span><br><span class="line">		WHILE @@FETCH_STATUS=0</span><br><span class="line">		 <span class="keyword">BEGIN</span> </span><br><span class="line">			<span class="keyword">set</span> @deal1=<span class="keyword">case</span> <span class="keyword">when</span> @wt21&lt;=@tempResult1 <span class="keyword">then</span> @wt21 <span class="keyword">else</span> @tempResult1 <span class="keyword">end</span>;   <span class="comment">--@deal是@wt2和@cap2中较小的一个</span></span><br><span class="line">		    if( @tempResult1&gt;0 and @deal1 &gt;0) </span><br><span class="line">		    <span class="keyword">begin</span></span><br><span class="line">			 <span class="keyword">insert</span> <span class="keyword">into</span> <span class="comment">##p_yd_deal_DW(odrn,cyrn,wt,dealflg) select @odrn1,@shrn1,@deal1,2;</span></span><br><span class="line">			 <span class="keyword">update</span> <span class="comment">##yd_od_DW set wt2=wt2-@deal1 where rn=@odrn1;</span></span><br><span class="line">			 <span class="comment">--update ##p_sh_DW set cap2=cap2-@deal where rn=@shrn;</span></span><br><span class="line">			 <span class="keyword">set</span> @tempResult1 = @tempResult1 - @deal1;</span><br><span class="line">			<span class="keyword">end</span> </span><br><span class="line">			<span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> cursor_test <span class="keyword">INTO</span> @odrn1, @wt21</span><br><span class="line">		 <span class="keyword">END</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">CLOSE</span> cursor_test</span><br><span class="line">	<span class="keyword">DEALLOCATE</span> cursor_test;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">--print @cap2</span></span><br><span class="line">	<span class="comment">--print &#x27;@tempResult&#x27;</span></span><br><span class="line">	<span class="comment">--print @tempResult</span></span><br><span class="line">	</span><br><span class="line">    if(@shrn1 &gt; 0) begin</span><br><span class="line">     <span class="keyword">update</span> <span class="comment">##p_sh_DW set initflg=1, cap2 = @tempResult1 where rn=@shrn1;  --当散航资源还有,货已经运完了,就把设initflg=1，如果散航资源没了，就设为0</span></span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    </span><br><span class="line">    if(@shrn1=0) <span class="keyword">begin</span> <span class="keyword">set</span> @doneflg1=<span class="number">1</span>; <span class="keyword">end</span>;     </span><br><span class="line">  </span><br><span class="line">   <span class="keyword">set</span> @shrn1=<span class="number">0</span>;<span class="keyword">set</span> @odrn1=<span class="number">0</span>; <span class="comment">--最后要对@shrn和@odrn重新进行一次初始化</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="comment">--commit tran;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql2 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql2 = <span class="string">&#x27;if OBJECT_ID(&#x27;&#x27;&#x27;</span>+@p_sh_DW_time+<span class="string">&#x27;&#x27;&#x27;) is not null drop table &#x27;</span>+ @p_sh_DW_time;</span><br><span class="line">exec sp_executesql @sql2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql3 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql3=<span class="string">&#x27;select * into &#x27;</span> +@p_sh_DW_time +<span class="string">&#x27; from ##p_sh_DW;&#x27;</span></span><br><span class="line">exec sp_executesql @sql3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql4 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql4 = <span class="string">&#x27;if OBJECT_ID(&#x27;&#x27;&#x27;</span>+@p_yd_deal_DW_time+<span class="string">&#x27;&#x27;&#x27;) is not null drop table &#x27;</span>+ @p_yd_deal_DW_time;</span><br><span class="line">exec sp_executesql @sql4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql5 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql5=<span class="string">&#x27;select * into &#x27;</span> +@p_yd_deal_DW_time +<span class="string">&#x27; from ##p_yd_deal_DW;&#x27;</span></span><br><span class="line">exec sp_executesql @sql5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql6 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql6 = <span class="string">&#x27;if OBJECT_ID(&#x27;&#x27;&#x27;</span>+@yd_od_DW_time+<span class="string">&#x27;&#x27;&#x27;) is not null drop table &#x27;</span>+ @yd_od_DW_time;</span><br><span class="line">exec sp_executesql @sql6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @sql7 <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="keyword">max</span>);</span><br><span class="line"><span class="keyword">set</span> @sql7=<span class="string">&#x27;select * into &#x27;</span> +@yd_od_DW_time  +<span class="string">&#x27; from ##yd_od_DW;&#x27;</span></span><br><span class="line">exec sp_executesql @sql7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##p_sh_DW;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##p_yd_deal_DW;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="comment">##yd_od_DW;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> TRY</span><br><span class="line"><span class="keyword">BEGIN</span> CATCH <span class="comment">-- 捕获异常</span></span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> base..tt_proc_log(ErrorProducure, ErrorNumber, ErrorSeverity, ErrorState, ErrorLine, ErrorMessage) </span><br><span class="line">        <span class="keyword">select</span> ERROR_PROCEDURE(), ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(), ERROR_LINE() , <span class="built_in">text</span> <span class="keyword">as</span> ErrorMessage</span><br><span class="line">         <span class="keyword">from</span> sys.messages <span class="keyword">WHERE</span> message_id=ERROR_NUMBER() <span class="keyword">AND</span> language_id=<span class="number">2052</span></span><br><span class="line"><span class="keyword">END</span> CATCH</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>工作感悟</title>
    <url>/blog/2020/08/23/%E5%B7%A5%E4%BD%9C%E6%84%9F%E6%82%9F/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>看房</title>
    <url>/blog/2020/08/23/%E7%9C%8B%E6%88%BF/</url>
    <content><![CDATA[<p>今天是周六，下午孩子睡了，我和老婆没事儿聊起来看房子的事情，本来结婚后也没有买房，一直和父母住在一起，主要是可以帮忙照看孩子，但也不是长久之计，毕竟也快30了，我这个年纪的基本上也都是还房贷的打工仔，看看房子也可以给工作增加一点动力。</p>
<p>说走就走，我和老婆开车来到高碑店东站附近，来这个区位主要是我在北京上班，需要来回跑，通了高铁之后方便很多，这样下了高铁就到家了，很方便。我们先看的是万科的房子，有高层和洋房可选，面积适中，90和110的，我们看了110的样本房，感觉装修的还不错，他家的房子主打的就是带装修，不是常见的毛坯房，这在我们这种小县城还是个新鲜玩意儿，不过据说在大城市都已经普及了。看完之后，销售很热情的给我们介绍了其他的一些配套设施，比如医院，教育，物业，绿化等。因为小区还在建设当中，这附近也属于新开发的地段，前景是很好的，只不过目前的配套还不是很完善，以后肯定会越来越好。聊了下价格就撤了，改换隔壁的昊龙阖府。</p>
<p>这是一家本地的开发商，他家的是毛坯房，赠送车位，价格也相对万科便宜一些，只不过他家的销售态度不好，进去之后就简单介绍了一下区位和目前在售的房型就草草了事，也没有样板间可以看，总体来说体验不如上一家。也许房子的质量不错，但销售的态度也是我们考虑的重要方面。</p>
<p>看完之后时间也不早了，孩子在家也不放心，就开车回去了。</p>
]]></content>
  </entry>
  <entry>
    <title>集成学习</title>
    <url>/blog/2020/08/23/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>集成学习有两点非常重要，1，每一个基分类器是如何生成的。2，这些基分类器是如何组合的。<br><strong>Adaboost算法</strong><br>Adaboost算法用于分类任务，最后的强分类器等于几个带不同权重的分类器之和，误差率越小那么该弱分类器的权重越大；在首次训练时，每个样本的权重一样，为1/m，m为样本个数。每次迭代后，更新样本权重，其中分错的样本增加权重，以获得更多关注，分对的样本相应降低权重。<br>之所以增加错误样本的权重会使错分的概率降低，是因为我们定义的误差为：错误样本的权重之和，我们的目标是使该误差最小。<br>还有</p>
]]></content>
      <categories>
        <category>数据科学</category>
      </categories>
  </entry>
  <entry>
    <title>当父亲之后</title>
    <url>/blog/2020/08/23/%E5%BD%93%E7%88%B6%E4%BA%B2%E4%B9%8B%E5%90%8E/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
